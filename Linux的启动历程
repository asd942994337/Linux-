    内核的引导:当计算机打开电源后，首先是BIOS开机自检，按照BIOS中设置的启动设备（一般都是硬盘）来启动。
              操作系统接管硬件以后，首先读入/boot目录下的内核文件。
              
    运行init:init进程是系统所有进程的起点，你可以把它比拟成系统所有进程的老祖宗，没有这个进程，系统所有进程都不会启动。
             init程序首先是需要读取配置文件/etc/inittab
             
    程序的运行级别:许多程序需要开机启动。他们在Windows叫做“服务”(service)，在Linux中叫做"守护进程"(daemon)。
                 init进程的一大任务就是去运行这些开机启动的程序。
                 但是，不同的场合需要启动不同的程序，比如用作服务器时，需要启动Apache，用作桌面就不需要。
                 Linux允许为不同的场合，分配不同的开机启动程序，这就叫做“允许级别”(runlevel)。也就是说，启动时根据“允许级别”，
                 确定要运行哪些程序
                 Linux系统的7个运行级别：
                 运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动。
                 运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登录。
                 运行级别2：多用户状态（没有NFS:网络文件系统）
                 运行级别3：完全的多用户状态（有NFS），登录后进入控制台命令行模式。
                 运行级别4：系统未使用，保留。
                 运行级别5：X11（就是X Window）控制台，登录后进入图形GUI模式。
                 运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动。
                 
    系统初始化:在init的配置文件中有这么一行：si::sysinit:/etc/rc.d/rc.sysinit它调用执行了/etc/rc.d/rc.sysinit，而rc.sysinit
               是一个Bash shell 的脚本，它主要是完成一些系统初始化的工作，rc.sysinit是每一个运行级别都要首先运行的重要脚本
               它主要完成的工作有：激活交换分区，检查磁盘，加载硬件模块以及其他一些需要优先执行任务
    
    建立终端:rc执行完毕后，返回init。这时基本系统环境以及设置好了，各种守护进程也已经启动了。
    用户登录系统。
